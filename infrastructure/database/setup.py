# infrastructure/database/setup.py
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
from .models import Base, User
from config.settings import settings
from werkzeug.security import generate_password_hash
from logger import logger

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
engine = None
Session = None


def init_db(db_url: str = settings.DATABASE_URL):
    global engine, Session

    logger.debug("üîß 1. –ó–∞–ø—É—Å–∫ init_db")
    engine = create_engine(db_url, echo=False, connect_args={"check_same_thread": False})
    logger.debug("‚úÖ 2. –î–≤–∏–∂–æ–∫ —Å–æ–∑–¥–∞–Ω")

    Session = sessionmaker(bind=engine)
    logger.debug("‚úÖ 3. Session —Ñ–∞–±—Ä–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∞")

    Base.metadata.create_all(engine)
    logger.debug("‚úÖ 4. –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã")

    session = Session()
    try:
        if session.query(User).first() is None:
            users = [
                User(
                    username="admin",
                    email="admin@example.com",
                    password=generate_password_hash("admin12344494949494")
                ),
                User(
                    username="writer",
                    email="writer@example.com",
                    password=generate_password_hash("writer1449494848474723")
                ),
            ]
            session.add_all(users)
            session.commit()
            print("‚úÖ 5. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã")
        else:
            print("‚ÑπÔ∏è 5. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–∂–µ –µ—Å—Ç—å")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
        session.rollback()
        raise  # üî• –ü–æ–∫–∞–∂–µ–º –æ—à–∏–±–∫—É
    finally:
        session.close()

    print("‚úÖ 6. init_db –∑–∞–≤–µ—Ä—à—ë–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º Session")
    return Session  # ‚úÖ –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ

